test2
test2 %>% summarise(d=lead(frequency)-frequency)
test3 <- test2 %>% group_by(position,generation)
test3
test3 <- test2 %>% group_by(position)
test3
test2
test3
test3 %>% summarise(d=lead(frequency)-frequency)
test3
test3 %>% mutate(d=lead(frequency)-frequency)
test4 <- test3 %>% mutate(d=lead(frequency)-frequency)
data.frame(test4)
test4 <- test3 %>% mutate(d=frequency-lag(frequency))
data.frame(test4)
test4 %>% select(!is.na(d))
test4 %>% select(not is.na(d))
test4 %>% select(is.na(d))
is.na(test4$d)
test4 %>% na.omit()
head(l2.data)
test <- data.frame(l2.data)
head(test)
test <- evoexp.data $%$ filter(lbl==4)
test <- evoexp.data %>% filter(lbl==4)
test
data.frame(test)
evpexp.data2$frequency
evoexp.data2$frequency
erased.muts$frequency
erased.muts <- filter(evoexp.data2,lbl==4)
erased.muts$frequency
erased.muts
d.recipient.muts
d.recipient.muts$lineage
d.recipient.muts
data.frame(d.recipient.muts)
erased.muts
clone.erased.muts
clone.erased.muts
pop.erased.muts
intersect(pop.erased.muts,clone.erased.muts)
pop.erased.muts
clone.erased.muts
write.csv(clone.erased.muts,file="/Desktop/clone_erased_muts.csv")
write.csv(clone.erased.muts,file="/Users/Rohandinho/Desktop/clone_erased_muts.csv")
write.csv(pop.erased.muts,file="/Users/Rohandinho/Desktop/pop_erased_muts.csv")
write.csv(clone.erased.muts,file="/Users/Rohandinho/Desktop/clone_erased_muts.csv")
> write.csv(pop.erased.muts,file="/Users/Rohandinho/Desktop/pop_erased_muts.csv")
> labeled.mutations
K12.clone.muts
K12.evoexp.fixations
K12.clone.muts
K12.evoexp.fixations
K12.evoexp.fixations
K12.clone.muts
test
test
data.frame(test)
test
pop.erased.muts
clone.erased.muts
problems.erased
pop.problem.erased.muts
data.frame(pop.problem.erased.muts)
test
head(data.frame(test))
l
l.delta.data
test
test
test$generation
filter(test,generation==1200)
parallel.delta.freq2 <- evoexp.data %>% filter(lineage !='Ara+1') %>% lineage(!='Ara-3')
evoexp.data
interesting.delta.pos
interesting.delta.muts
interesting.delta.muts$gene.annotation
interesting.delta.muts
interesting.delta.muts$gene.annotation
unique(interesting.delta.muts$gene.annotation)
evoexp.data
g <- levels(labeled.mutations$genome)[1]
g
clone.lineage
clone.lineage
clone.delta.freq
)
g.data
clone.lineage
labeled.mutations
labeled.mutations$lbl
l1 = "Ara+1"
l2 = "Ara+2"
l3 = "Ara+3"
levels(no.B.genomes$lbl)
only.donor.mutations$lbl
only.donor.mutations$lbl
unique(only.donor.mutations$lbl)
sort(unique(only.donor.mutations$lbl))
donor.mutations
donor.mutations
data.frame(donor.mutations)
data.frame(donor.mutations)
donor.mutations
REL606.LENGTH/2
labeled.mutations
origin
G.score.data
scored.odd.genomes
origin$position
Fig2.xlab
)
erased.gene.list
data.frame(erased.gene.list)
data.frame(clone.erased.dN)
data.frame(erased.gene.list)
data.frame(erased.gene.list)
data.frame(erased.gene.list)
genome.names
is.odd
erased.gene.list
head(labeled.mutations)
erased.gene.list
test <- erased.gene.list
test
erased.gene.list
erased.gene.list
quartz()
pop.multiple
genome.input.df
all.genomes
genome.input.df
K12.clone.muts
K12.evoexp.fixations
head(K12.diff.data)
test
test
test$my_bin
REL606.LENGTH/400
REL606.LENGTH/401
REL606.LENGTH/402
REL606.LENGTH/403
REL606.LENGTH/404
x = 1277
binz
x = 2385739
x/8327
floor(x/8327)
floor(123/8327)
ceil(123/8327)
ceiling(123/8327)
introgression.vs.divergence.data
introgression.vs.divergence.data
FigS1.2
FigS1.2
FigS1.2
s1.2model
confint(s1.2model)
evoexp.data
head(data.table(evoexp.data))
head(data.frame(evoexp.data))
evoexp.data2
max(evoexp.data2$frequency)
max(evoexp.data2$frequency)
evoexp.data2
head(data.frame(evoexp.data2))
evoexp.data2
test
head(data.frame(test))
test
head(data.frame(test))
test
head(data.frame(test))
test2 <- filter(test,lineage=='Ara-3' & position==5627)
test2
test2 <- filter(evoexp.data,lineage=='Ara-3' & position==5627)
test2
data.frame(test2)
test
data.frame(test)
test
evoexp.data2
head(data.frame(test))
head(data.frame(evoexp.data2))
quartz()
cluster.plot2
install.packages("ggfortify")
evoexp.data2
evoexp.fixations
fixed.erasures
erased.evoexp.mutations
erased.evoexp.mutations
unique(erased.evoexp.mutations$gene.annotation)
final.erasures
data.frame(final.erasures)
initial.erasures
quartz()
evoexp.fixations
K12.parallel.evoexp.dS.fixations.by.allele
K12.parallel.evoexp.dN.fixations.by.allele
K12.parallel.evoexp.dN.fixations.by.allele$parallelism
evoexp.fixations
K12.parallel.evoexp.dS.fixations.by.gene
K12.parallel.evoexp.dN.fixations.by.gene
new.parallel.evoexp.dS.fixations.by.gene
new.parallel.evoexp.dN.fixations.by.gene
1031/914
labeled.mutations <- evoexp.data2
evoexp.data2
labeled.mutations
levels(labeled.mutations$lineage)
l1 = "Ara+1"
l2 = "Ara+2"
l3 = "Ara+3"
l4 = "Ara+4"
l5 = "Ara+5"
l6 = "Ara+6"
evoexp.data2
labeled.mutations <- evoexp.data2
evoexp.data2
labeled.mutations <- evoexp.data2
labeled.mutations
no.B.genomes
no.B.genomes$lineage
rev(unique(no.B.genomes$genome))
rev(unique(no.B.genomes$lineage))
test <- evoexp.data2 %>% filter(lineage == 'Ara+5')
test
l5
initial.erasures
final.erasures
fixed.erasures
evoexp.data2 %>% filter(lbl==4)
LCA.evoexp.data
unique(LCA.evoexp.data$lbl)
LCA.evoexp.data
scored.LCA.evoexp.data
scored.LCA.evoexp.data
gene.test
all.genomes
PARAMETERS
amps
head(K12.specific.coverage)
nbinom.fit
nbinom.draws
quartz()
test.plot
install.packages("mixtools")
head(test.dt)
length(test.dt$K12_position)
K12.LENGTH - length(test.dt$K12_position)
test.dt$K12_position
K12.zero.cov.vec
head(test.dt)
test.dt2
test.dt2
zero.K12_position.vec
length(zero.K12_position.vec)
K12.LENGTH - length(test.dt$K12_coverage)
length(test.dt$K12_coverage)
length(test.dt$K12_position)
K12.LENGTH - length(test.dt$K12_position)
head(test.dt2)
test.dt2
head(test.dt2,20)
head(test.dt2,20)
test.plot
test.plot
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function", 
    file = M, sep = "\n", append = TRUE)
cat("\nCC=clang", "CXX=clang++ -arch x86_64 -ftemplate-depth-256", 
    file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
	return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
library("rstan")
genome.input.df
amps
amps
data.frame(amps)
amp.parallelism
annotated.amps
names(amps)
genome.input.df
names(genome.input.df)
genome.input.df$Genome
amp.parallelism
amps
data.frame(amps)
my.dt2
nbinom.fit
data
fit <- vb(stan.model, data=data, par=c("pi","mean2","tau2"),
          tol_rel_obj=0.01,algorithm="meanfield")
names(K12.specific.coverage)
levels(K12.specific.coverage$genome)
unique(K12.specific.coverage$genome)
mixed.pop.test.data
quartz()
nbinom.fit
mean2 <- 2*nbinom.fit$mean
mean2
mean1 = 51.9
disp = 2.7
pnbinom(mean2,size=disp,mu=mean1)
pnbinom(mean2,size=disp,mu=mean2)
pnbinom(mean2,size=disp,mu=mean2,lower.tail=FALSE)
pnbinom(mean2,size=disp,mu=mean2,lower.tail=FALSE)
pnbinom(mean2,size=disp,mu=mean1,lower.tail=FALSE)
y = pnbinom(mean2,size=disp,mu=mean1,lower.tail=FALSE)
x = pnbinom(mean2,size=disp,mu=mean1,lower.tail=FALSE)
x
y
y = pnbinom(mean2,size=disp,mu=mean2,lower.tail=FALSE)
y
x
y/x
log(y/x)
y = dnbinom(mean2,size=disp,mu=mean2)
x = dnbinom(mean2,size=disp,mu=mean1)
x
y
dnbinom(mean2,size=disp,mu=mean2)
dnbinom(103,size=disp,mu=mean2)
dnbinom(104,size=disp,mu=mean2)
dnbinom(52,size=disp,mu=mean2)
mean2
dnbinom(52,size=disp,mu=103)
dnbinom(103,size=disp,mu=103)
T1.density.plot
joint.coverage.density.plot
head(K12.specific.coverage)
10 % 2
10 %/% 2
11 %/% 2
11 %% 2
nbinom.fit
nbinom.fit$mean
nbinom.fit$dispersion
qnbinom(0.01,size=nbinom.fit$dispersion,mu=nbinom.fit$mean)
qnbinom(0.05,size=nbinom.fit$dispersion,mu=nbinom.fit$mean)
quartz()
test.plot
test.plot
qnbinom(0.1,size=nbinom.fit$dispersion,mu=nbinom.fit$mean)
test.plot
test.plot
test.plot
test.plot
my.cov.threshold
T0.cov.threshold
T1.cov.threshold
quartz()
quartz()
joint.coverage.scatter.plot
head(K12.specific.coverage)
unique(K12.specific.coverage$genome)
pop.and.clone.metadata
head(K12.specific.coverage)
object_size(K12.specific.coverage)
object_size(K12.specific.coverage)
install.packages("pryr")
head(K12.specific.coverage)
unique(K12.specific.coverage$Name)
K12.specific.coverage <- left_join(K12.specific.coverage,pop.and.clone.metadata,copy=TRUE)
type(K12.specific.coverage)
typeof(K12.specific.coverage)
class(K12.specific.coverage)
K12.specific.coverage <- NULL
head(pop.and.clone.metadata)
K12.mixed.pop.data
K12.mixed.pop.data
K12.mixed.pop.data
K12.mixed.pop.data
tbl_df(K12.mixed.pop.data)
K12.clone.data
K12.mixed.pop.data
test
test
test
test
K12.mixed.pop.data <- filter(K12.specific.data,is.Clone==0,Generation %in% c(1000,1200)) %>%
    group_by(Population,K12_position) %>% summarize(fixed=ifelse(n()==2,TRUE,FALSE)) %>%
    filter(fixed)
K12.clone.data
test1
filtered.cov.subset <- test1
filtered.coverage <- test1
K12.segments
K12.segments
detach(plyr)
detach("plyr")
detach("package:plyr", unload=TRUE)
library(dplyr)
detach("package:ggplot2", unload=TRUE)
detach("package:ggrepel", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:viridis", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:dtplyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:plyr", unload=TRUE)
K12.mixed.pop.data
fixed.K12.segments
data.frame(fixed.K12.segments)
clone.K12.segments <- K12.clone.data %>% group_by(Name) %>% do(find.K12.segments(.))
K12.clone.data
unique(K12.clone.data$Name)
head(K12.clone.data$Name)
head(K12.clone.data)
clone.K12.segments
clone.K12.segments
K12.gb
annotated.fixed.K12.segments
fixed.K12.segments <- segments
segments <- fixed.K12.segments
ref.gbk <- K12.gb
g.amp.ranges
g.amp.ranges
gb
ref.genes
hits
segment.genes.df
fixed.K12.seg.parallelism
data.frame(fixed.K12.seg.parallelism)
data.frame(clone.K12.seg.parallelism)
annotated.clone.K12.segments
head(annotated.clone.K12.segments)
clone.K12.segments
K12.mixed.pop.data
head(clone.K12.seg.parallelism)
head(annotated.clone.K12.segments)
K12.clone.data
head(K12.clone.data)
is.odd
clone.K12.seg.parallelism
clone.K12.seg.parallelism
fixed.K12.seg.parallelism
annotated.clone.K12.segments
labeled.mutations
recomb.mut.ratio.table
data.frame.recomb.mut.ratio.table
data.frame(recomb.mut.ratio.table)
all.chunk.summary
all.K12.chunks
head(data.frame(all.K12.chunks))
all.K12.chunk.count
recomb.mut.ratio.table
recomb.mut.ratio.table
recomb.mut.ratio.table <- filter(labeled.mutations,mut.annotation=='dS') %>%
    group_by(genome) %>% mutate(recomb.dS=ifelse(lbl %in% c(1,4,6,7,8,9),1,0)) %>%
    mutate(new.dS=ifelse(lbl==3,1,0)) %>%
    summarise(tot.new.dS=sum(new.dS),tot.recomb.dS=sum(recomb.dS)) %>%
    left_join(all.K12.chunk.count) %>%
    mutate(dS.r.over.m.ratio=tot.recomb.dS/tot.new.dS) %>%
    mutate(event.r.over.m.ratio=recombination.events/tot.new.dS)
recomb.mut.ratio.table
data.frame(recomb.mut.ratio.table)
head(evoexp.fixations)
head(K12.diff.data)
all.K12.dN
all.K12.dS
7969/23827
2967/9408
obs.evoexp.dS
obs.evoexp.dN
obs.evoexp.dS
obs.evoexp.dN
44229/143748
obs.evoexp.dS
obs.evoexp.dN
19730/64037
non.fixed.evoexp.dS
non.fixed.evoexp.dN
6726/21551
7969/23827
6726/21551
head(hybrid.search.data)
data.frame(head(hybrid.search.data))
head(hybrid.search.data)
data.frame(head(hybrid.search.data))
hybrid.search.data
data.frame(hybrid.search.data)
install.packages('zoo')
head(hybrid.search.data2)
head(hybrid.search.data)
hybrid.search.data2
hybrid.search.data
data.frame(hybrid.search.data)
hybrid.search.data$replcaed
hybrid.search.data$replaced
test <- hybrid.search.data$replaced
test
rollmean(test,5,na.pad=TRUE)
head(hybrid.search.data3)
hybrid.search.data4
