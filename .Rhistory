groups(test)
groups(c(1,2))
test
head(data.frame(test))
odd.K12.chunks
head(data.frame(odd.K12.chunks))
odd.K12.chunks
odd.K12.chunks$chunk.length
test <- group_by(odd.genoes,lineage) %>%
calc.indel.change() %>%
filter(chunk.transitions!='0') %>%
mutate(chunk.length=position-lag(position))
test <- group_by(odd.genomes,lineage) %>%
calc.indel.change() %>%
filter(chunk.transitions!='0') %>%
mutate(chunk.length=position-lag(position))
test
head(test$chunk.length)
test <- group_by(odd.genomes,lineage) %>% calc.indel.change()
test
head(data.frame(test))
test2 <- filter(data,chunk.transitions!='0')
test2 <- filter(test,chunk.transitions!='0')
test2
head(data.frame(test2))
test2 <- filter(test,chunk.transitions!='0') %>% mutate(chunk.length=position-lag(position))
test2
head(data.frame(test2))
test2$position
test2$position
test2
head(data.frame(test2))
test3 <- mutate(test2,chunk.length=position-lag(position))
head(data.frame(test3))
test3$position
lag(test2$position)
head(data.frame(genome.chunks))
test <- mutate(genome.chunks,chunk.length=position-lag(position))
test
head(data.frame(test))
test <- mutate(genome.chunks,chunk.length=lead(position)-position)
head(data.frame(test))
test <- mutate(genome.chunks,chunk.length=as.numeric(position)-lag(as.numeric(position)))
head(data.frame(test))
type(test$position)
typeof(test$position)
t1 = test$position
t2 = lag(test$position)
t1
t2
t1-t2
genome.chunks
head(data.frame(genome.chunks))
test = head(data.frame(genome.chunks))
test
test %>% mutate(chunk.length=position-lag(position))
test2 <- genome.chunks %>% mutate(chunk.length=position-lag(position))
head(data.frame(test2))
typeof(genome.chunks)
typeof(odd.genomes)
typeof(labeled.mutations)
typeof(labeled.mutations)
labeled.mutations
typeof(labeled.mutations)
typeof(data.frame(labeled.mutations))
odd.genomes
genome.chunks <- group_by(odd.genomes,lineages)
genome.chunks <- group_by(odd.genomes,lineage)
grouped.genomes.df <- genome.chunks
del.sizes
df
head(data.frame(odd.genome.chunks))
head(data.frame(genome.chunks))
test <- genome.chunks
genome.chunks <- test %>% filter(chunk.transitions!='0')
head(data.frame(genome.chunks))
test <- genome.chunks %>%
mutate(chunk.length=position-lag(position))
head(data.frame(test))
class(genome.chunks)
typeof(genome.chunks)
test <- data.frame(genome.chunks) %>% mutate(chunk.length=position-lag(position))
head(test)
class(test)
genome.chunks <- group_by(odd.genomes,lineage) %>%
        calc.indel.change() %>%
        filter(chunk.transitions != '0') %>%
        ## position - lag(position) gives the distance between the previous transition
        ## marker. So, there are N-1 chunk lengths for N markers (first entry is NA).

        data.frame() %>% ## for some reason have to do type coercion to get the lag(position) working.
        mutate(chunk.length=position-lag(position))
genome.chunks
genome.chunks
quote(lineage)
'lineage'
quote(lineage)
head(data.frame(odd.genome.chunks))
head(all.odd.chunks)
all.odd.chunks
levels(all.odd.chunks$lineage)
head(labeled.mutations)
unique(labeled.mutations$genome)
rm(Fig1.factory)
scored.odd.genomes
scored.odd.genomes
gene.test
head(odd.genomes)
odd.introgression.scores
odd.introgression.scores <- score.introgression(odd.genomes)
odd.genomes
odd.introgression.scores
head(data.frame(odd.introgression.scores))
odd.introgression.scores
odd.introgression.scores
independent.genomes <- odd.genomes
label.levels
labels.to.int
labels.to.int
test <- score.introgression(odd.genomes)
test
introgression.scores
odd.introgression.scores
)
get.introgressed.genes(odd.introgression.scores)
test <- get.introgressed.genes(odd.introgression.scores)
data.frame(odd.introgressed.genes)
odd.introgression.scores
odd.K12.clone.data
K12.mixed.pop.data
}
odd.K12.clone.data
G.score.data
unique(K12.clone.data$genome)
unique(odd.K12.clone.data$genome)
mut.df <- odd.K12.clone.data
lvector <- c("Ara+1","Ara+2", "Ara+3")
no.B.genomes$lineage
no.B.genomes$lineage
rev(unique(no.B.genomes$lineage))
rev(unique(no.B.genomes$genome))
rev(unique(no.B.genomes$genome))
mut.df <- K12.clone.data
mut.df
annotated.clone.K12.segments
head(annotated.fixed.K12.segments)
fixed.K12.seg.parallelism
data.frame(fixed.K12.seg.parallelism)
data.frame(clone.K12.seg.paralleism)
data.frame(clone.K12.seg.parallelism)
annotated.clone.K12.segments
head(annotated.clone.K12.segments)
head(test.clone.segs)
head(test.clone.segs)
head(annotated.fixed.K12.segments)
head(annotated.fixed.K12.segments)
head(annotated.clone.K12.segments)
fixed.K12.segment.plot
annotated.fixed.K12.segments
head(labeled.mutations)
test <- filter(labeled.mutations,lineage=='Ara+1',gene.annotation=='malT')
test
data.frame(test)
levels(test$mut.annotation)
levels(labeled.mutations$mut.annotation)
test2 <- filter(labeled.mutations,mut.annotation=='')
test2
data.frame(test2)
unique(test4$gene.annotation)
unique(test2$gene.annotation)
levels(test$mut.annotation)
levels(labeled.mutations$mut.annotation)
no.B.genomes <- filter(labeled.mutations,lbl!='0')
LTEE.top.hits
data.frame(LTEE.top.hits)
no.B.genomes <- labeled.mutations %>% filter(lbl!=0)
data.frame(LTEE.top.hits)
}
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
add.odd.chunks
all.odd.chunks
genomes.df <- odd.genomes
test <- calc.indel.change(odd.genomes)
test
test <- filter(test,genome=='REL11735')
test
sum(test$deleted)
sum(test$inserted)
sum(test$inserted-test$deleted)
sum(test$inserted+test$deleted)
test
head(data.frame(test))
hand.annotation
clone.K12.seg.parallelism
data.frame(clone.K12.seg.parallelism)
odd.introgression.scores
odd.introgressed.genes
scored.odd.genomes
data.frame(head(scored.odd.genomes))
introgression.score
odd.introgression.scores
tail(odd.introgression.scores)
head(K12.diff.data)
K12.diff.data
odd.introgression.scores
data.frame(head(K12.diff.data))
K12.diff.data
odd.introgression.scores
odd.genomes
introgression.vs.divergence.data$introgression.score
filter(introgression.vs.divergence.data,is.na(introgression.score))
odd.genomes %>% filter(gene.annotation=='yegZ')
odd.genomes %>% filter(position==2100919)
odd.genomes %>% filter(position==2100919) %>% data.frame()
K12.diff.data
introgression.vs.divergence.data
filter(introgression.vs.divergence.data,is.na(introgression.score))
two.classed.introgression.data
median.introgression.data
erased.evoexp.mutations
test <- erased.evoexp.mutations %>% filter(lineage=='Ara-3')
test
data.frame(test)
evoexp.erased.mutations
data.frame(evoexp.erased.mutations)
evoexp.erased.mutations
makeLCA_Fig1panel <- Fig1.factory(LCA.evoexp.data,G.score.data,analysis.type='evoexpLCA')
LCApanel1 <- makeLCA_Fig1panel(c("Ara+1","Ara+2","Ara+3", "Ara+4", "Ara+5", "Ara+6"))
LCApanel2 <- makeLCA_Fig1panel(c("Ara-1","Ara-2","Ara-3", "Ara-4", "Ara-5", "Ara-6"))
ggsave("/Users/Rohandinho/Desktop/LCA_Fig1A.pdf", LCApanel1,width=9.5,height=8)
ggsave("/Users/Rohandinho/Desktop/LCA_Fig1B.pdf", LCApanel2,width=9.5,height=8)
obs.evoexp.dS
obs.evoexp.dN
non.fixed.evoexp.dS
non.fixed.evoexp.dN
test <- evoexp.labeled.mutations %>% filter(lbl==0)
test
data.frame(head(test))
test <- evoexp.labeled.mutations %>% filter(lbl==4)
data.frame(head(test))
head(evoexp.labeled.mutations)
data.frame(head(evoexp.labeled.mutations))
evoexp.labeled.mutations$frequency
test <- evoexp.labeled.mutations %>% filter(is.na(frequency))
unique(test$lbl)
erased.evoexp.mutations
initial.erasures
fixed.erasures
final.erasures
non.fixed.erasures
data.frame(non.fixed.erasures)
mut.df <- labeled.mutations
lvector <- c("Ara+1","Ara+2","Ara+3")
top.hits
unique(top.hits$gene.annotation)
LTEE.top.hits
unique(LTEE.top.hits$gene.annotation)
unique(LTEE.top.hits$gene.annotation)
 head(no.B.genomes)
analysis.type= 'Fig1'
quartz()
panel
levels(no.B.genomes$lbl)
unique(no.B.genomes$lbl)
test <- viridis(9)
test
palette(test)
levels(no.B.genomes$lbl)
levels(no.B.genomes$lbl)
test <- no.B.genomes %>% filter(lbl %in% c('6','7','8','9'))
test
levels(no.B.genomes$lbl)
head(LTEE.top.hits)
LTEE.top.hits
seq(130,10)
seq(0,130,10)
seq(10,130,10)
seq(10,120,10)
odd.genomes
make_Fig1_panel <- Fig1.factory(odd.genomes, G.score.data, analysis.type='Fig1')
testpanel <- make_Fig1_panel(c("Ara+1","Ara+2","Ara+3","Ara+4","Ara+5","Ara+6","Ara-1","Ara-2","Ara-3","Ara-4","Ara-5","Ara-6"))
mut.df <- odd.genomes
LTEE.top.hits
top.hits
top.hits$gene.annotation
unique(top.hits$gene.annotation)
genes.to.label
genes.to.label
G.score.data
test <- filter(G.score.data,Observed.nonsynonymous.mutation>1)
test
genes.to.label
data.frame(genes.to.label)
mut.df <- odd.genomes
 genes.to.label
top.G.score.genes
top.hit.labels
top.hit.labels
top.hit.labels
top.hit.labels$mut.annotation
levels(top.hit.labels$mut.annotation)
levels(top.hit.labels$mut.annotation)
top.hit.labels
unique(top.hit.labels$gene.annotation)
quartz()
panel
top.hit.labels
panel
top.hit.labels
genes.to.label
top.hit.labels$mut.annotation
top.hit.labels$mut.annotation
top.hit.labels$mut.annotation
top.hit.labels$mut.annotation
unique(top.hit.labels$lbl)
mut.df = LCA.evoexp.data
top.hit.labels
unique(top.hit.labels$mut.annotation)
mut.df = LCA.evoexp.data
levels(no.B.genomes$mut.annotation)
mut.df <- LCA.evoexp.data
levels(top.hit.labels$mut.annotation)
top.hit.labels$mut.annotation
top.hit.labels$mut.annotation
top.hits
levels(top.hits$mut.annotation)
genes.to.label
data.frame(genes.to.label)
levels(no.B.genomes$mut.annotation)
levels(mut.df$mut.annotation)
levels(evoexp.data$mut.annotation)
levels(evoexp.labeled.mutations$mut.annotation)
levels(evoexp.data)
levels(evoexp.data$mut.annotation)
levels(LCA.evoexp.data$mut.annotation)
mut.df <- LCA.evoexp.data$mut.annotation
mut.df <- LCA.evoexp.data
levels(top.hit.labels)
levels(top.hit.labels$mut.annotation)
top.hit.labels$mut.annotation
data.frame(top.hit.labels)
levels(no.B.genomes$lineage)
rev(levels(no.B.genomes$lineage))
levels(evoexp.data$lineage)
levels(evoexp.labeled.mutations$lineage)
levels(labeled.mutations$lineage)
levels(odd.genomes$lineage)
levels(evoexp.data$lineage)
levels(LCA.evoexp.data)
levels(LCA.evoexp.data$lineage)
levels(LCA.evoexp.data)
levels(LCA.evoexp.data$lineage)
levels(odd.genomes$lineage)
mut.df <- odd.genomes
levels(mut.df$lineage)
levels(no.B.genomes$lineage)
quartz()
panel
mut.df <- LCA.evoexp.data
panel
unique(LCA.evoexp.data$lineage)
unique(odd.genomes$lineage)
levels(odd.genomes$lineage)
)
mut.df <- LCA.evoexp.data
levels(no.B.genomes$lineage)
match(no.B.genomes$lineage,levels(lineage))
match(no.B.genomes$lineage,levels(no.B.genomes$lineage))
tail(no.B.genomes)
130-60
LCA.evoexp.data
test <- filter(LCA.evoexp.data,gene.annotation='iclR')
test <- filter(LCA.evoexp.data,gene.annotation=='iclR')
test
data.frame(test)
data.frame(test %>% select(lineage,genome,mut.type,mut.annotation,gene.annotation))
test <- filter(LCA.evoexp.data,position==4202427)
test
data.frame(test)
test <- filter(evoexp.labeled.mutations,position==4202427)
test
data.frame(test)
filter(evoexp.data,position==4202427)
data.frame(head(evoexp.data))
filter(evoexp.data,position=4202427)
filter(evoexp.data,position==4202427)
filter(LCA.evoexp.data,position==4202427)
mut.df <- odd.genomes
unique(no.B.genomes$lineage)
unique(no.B.genomes$y.center)
mut.df <- LCA.evoexp.data
unique(no.B.genomes$y.center)
unique(no.B.genomes$lineage)
head(odd.genomes)
head(even.genomes)
LCA.evoexp.data
test2 <- intersect(clone.intersection,test)
test
clone.intersection
evoexp.clone.intersection
evoexp.clone.union
my.jaccard.index
evoexp.clone.intersection
odd.genomes
clone.intersection
clone.intersection
LCA.evoexp.data
my.jaccard.index
odd.genomes
evoexp.clone.intersection
typeof(odd.genomes$position)
evoexp.clone.intersection$position
integer(evoexp.clone.intersection$position)
odd.introgression.scores
odd.introgressed.genes
scores <- odd.introgression.scores
scores
K12.diff.data
scores
ggsave("/Users/Rohandinho/Desktop/test.pdf",test,height=2.5,width=6)
ggsave("/Users/Rohandinho/Desktop/test.pdf",test,height=2.5,width=6)
ggsave("/Users/Rohandinho/Desktop/test.pdf",test,height=2.5,width=6)
filter(odd.introgression.scores,introgression.score>0)
filter(odd.introgression.scores,introgression.score==0)
odd.introgression.scores
scores
spline(scores)
auxotrophs
hfrs
auxotrophs
text(x,y, expression(paste("A) ",Delta,"stbA::cat"));
text(x,y, expression(paste("A) ",Delta,"stbA::cat"))
)
auxotrophs
Δ
'Δ'
auxotrophs
hand.annotation
?read.csv
hand.annotation
hand.annotation
hand.annotation
Encoding("Hello")
Encoding(hand.annotation$annotation)
Encoding(hand.annotation$annotation[1])
expression(Delta)
hand.annotation
Δ
'Δ'
Encoding("Δ")
hand.annotation
hand.annotation
hand.annotation
hand.annotation
hand.annotation
hand.annotation
hand.annotation
hand.annotation
auxotrophs
warnings()
warnings()
ggsave("/Users/Rohandinho/Desktop/test.pdf",test,height=2.5,width=6,device=cairo_pdf)
library(Cairo)
install.packages('Cairo')
library(Cairo)
ggsave("/Users/Rohandinho/Desktop/test.pdf",test,height=2.5,width=6,device=cairo_pdf)
warnings()
auxotrophs
hand.annotation
install.packages('ggrepel')
warnings()
warnings()
Fig3 <- makeFig3(odd.introgression.scores,auxotrophs,hfrs)
ggsave("/Users/Rohandinho/Desktop/Fig3.pdf",Fig3,height=2.5,width=6)
test <- K12.evoexp.data
filter(test,initial.freq==0)
filter(test,initial.freq==1)
all.odd.chunks
all.odd.chunks
install.packages("cowplot")
warnings
warnings()
library(cowplot)
quartz()
plot_grid(Fig5A, Fig5B, labels = c("A", "B"))
head(clone.F.coverage)
head(evoexp.F.coverage)
