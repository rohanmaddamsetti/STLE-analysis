head(K12.specific.coverage)
10 % 2
10 %/% 2
11 %/% 2
11 %% 2
nbinom.fit
nbinom.fit$mean
nbinom.fit$dispersion
qnbinom(0.01,size=nbinom.fit$dispersion,mu=nbinom.fit$mean)
qnbinom(0.05,size=nbinom.fit$dispersion,mu=nbinom.fit$mean)
quartz()
test.plot
test.plot
qnbinom(0.1,size=nbinom.fit$dispersion,mu=nbinom.fit$mean)
test.plot
test.plot
test.plot
test.plot
my.cov.threshold
T0.cov.threshold
T1.cov.threshold
quartz()
quartz()
joint.coverage.scatter.plot
head(K12.specific.coverage)
unique(K12.specific.coverage$genome)
pop.and.clone.metadata
head(K12.specific.coverage)
object_size(K12.specific.coverage)
object_size(K12.specific.coverage)
install.packages("pryr")
head(K12.specific.coverage)
unique(K12.specific.coverage$Name)
K12.specific.coverage <- left_join(K12.specific.coverage,pop.and.clone.metadata,copy=TRUE)
type(K12.specific.coverage)
typeof(K12.specific.coverage)
class(K12.specific.coverage)
K12.specific.coverage <- NULL
head(pop.and.clone.metadata)
K12.mixed.pop.data
K12.mixed.pop.data
K12.mixed.pop.data
K12.mixed.pop.data
tbl_df(K12.mixed.pop.data)
K12.clone.data
K12.mixed.pop.data
test
test
test
test
K12.mixed.pop.data <- filter(K12.specific.data,is.Clone==0,Generation %in% c(1000,1200)) %>%
    group_by(Population,K12_position) %>% summarize(fixed=ifelse(n()==2,TRUE,FALSE)) %>%
    filter(fixed)
K12.clone.data
test1
filtered.cov.subset <- test1
filtered.coverage <- test1
K12.segments
K12.segments
detach(plyr)
detach("plyr")
detach("package:plyr", unload=TRUE)
library(dplyr)
detach("package:ggplot2", unload=TRUE)
detach("package:ggrepel", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:viridis", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:dtplyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:plyr", unload=TRUE)
K12.mixed.pop.data
fixed.K12.segments
data.frame(fixed.K12.segments)
clone.K12.segments <- K12.clone.data %>% group_by(Name) %>% do(find.K12.segments(.))
K12.clone.data
unique(K12.clone.data$Name)
head(K12.clone.data$Name)
head(K12.clone.data)
clone.K12.segments
clone.K12.segments
K12.gb
annotated.fixed.K12.segments
fixed.K12.segments <- segments
segments <- fixed.K12.segments
ref.gbk <- K12.gb
g.amp.ranges
g.amp.ranges
gb
ref.genes
hits
segment.genes.df
fixed.K12.seg.parallelism
data.frame(fixed.K12.seg.parallelism)
data.frame(clone.K12.seg.parallelism)
annotated.clone.K12.segments
head(annotated.clone.K12.segments)
clone.K12.segments
K12.mixed.pop.data
head(clone.K12.seg.parallelism)
head(annotated.clone.K12.segments)
K12.clone.data
head(K12.clone.data)
is.odd
clone.K12.seg.parallelism
clone.K12.seg.parallelism
fixed.K12.seg.parallelism
annotated.clone.K12.segments
labeled.mutations
recomb.mut.ratio.table
data.frame.recomb.mut.ratio.table
data.frame(recomb.mut.ratio.table)
all.chunk.summary
all.K12.chunks
head(data.frame(all.K12.chunks))
all.K12.chunk.count
recomb.mut.ratio.table
recomb.mut.ratio.table
recomb.mut.ratio.table <- filter(labeled.mutations,mut.annotation=='dS') %>%
    group_by(genome) %>% mutate(recomb.dS=ifelse(lbl %in% c(1,4,6,7,8,9),1,0)) %>%
    mutate(new.dS=ifelse(lbl==3,1,0)) %>%
    summarise(tot.new.dS=sum(new.dS),tot.recomb.dS=sum(recomb.dS)) %>%
    left_join(all.K12.chunk.count) %>%
    mutate(dS.r.over.m.ratio=tot.recomb.dS/tot.new.dS) %>%
    mutate(event.r.over.m.ratio=recombination.events/tot.new.dS)
recomb.mut.ratio.table
data.frame(recomb.mut.ratio.table)
head(evoexp.fixations)
head(K12.diff.data)
all.K12.dN
all.K12.dS
7969/23827
2967/9408
obs.evoexp.dS
obs.evoexp.dN
obs.evoexp.dS
obs.evoexp.dN
44229/143748
obs.evoexp.dS
obs.evoexp.dN
19730/64037
non.fixed.evoexp.dS
non.fixed.evoexp.dN
6726/21551
7969/23827
6726/21551
head(hybrid.search.data)
data.frame(head(hybrid.search.data))
head(hybrid.search.data)
data.frame(head(hybrid.search.data))
hybrid.search.data
data.frame(hybrid.search.data)
install.packages('zoo')
head(hybrid.search.data2)
head(hybrid.search.data)
hybrid.search.data2
hybrid.search.data
data.frame(hybrid.search.data)
hybrid.search.data$replcaed
hybrid.search.data$replaced
test <- hybrid.search.data$replaced
test
rollmean(test,5,na.pad=TRUE)
head(hybrid.search.data3)
hybrid.search.data4
donor.mutations.summary
levels(donor.mutations$genome)
auxotrophs
head(only.donor.mutations)
test
data.frame(test)
test
test
data.frame(test)
head(odd.genome.chunks)
head(test)
data.frame(test)
data.frame(test)
head(test)
head(test$chunk.transitions)
x = 1
x += 1
head(test)
head(test$chunk.index)
tail(test$chunk.index)
test$chunk.index
test.segment.labels <- test$K12.chunk
test.segment.labels
system.time(index.segments(test.segment.labels))
test.lbls <- test$lbl
system.time(labels.to.chunk(test.lbls))
system.time(labels.to.chunks(test.lbls))
system.time(labels.to.chunks(test.lbls))
test.genomes <- group_by(odd.genomes,lineage)
test$chunk.index
test
test
ins.test <- filter(test,mut.type='INS')
ins.test <- filter(test,mut.type=='INS')
del.test <- filter(test,mut.type=='DEL')
del.test
deltest2
instest2
deltest2
instest2
indels
indels
indels
indels
indels
test2
head(data.frame(test2))
groups(test)
groups(c(1,2))
test
head(data.frame(test))
odd.K12.chunks
head(data.frame(odd.K12.chunks))
odd.K12.chunks
odd.K12.chunks$chunk.length
test <- group_by(odd.genoes,lineage) %>%
calc.indel.change() %>%
filter(chunk.transitions!='0') %>%
mutate(chunk.length=position-lag(position))
test <- group_by(odd.genomes,lineage) %>%
calc.indel.change() %>%
filter(chunk.transitions!='0') %>%
mutate(chunk.length=position-lag(position))
test
head(test$chunk.length)
test <- group_by(odd.genomes,lineage) %>% calc.indel.change()
test
head(data.frame(test))
test2 <- filter(data,chunk.transitions!='0')
test2 <- filter(test,chunk.transitions!='0')
test2
head(data.frame(test2))
test2 <- filter(test,chunk.transitions!='0') %>% mutate(chunk.length=position-lag(position))
test2
head(data.frame(test2))
test2$position
test2$position
test2
head(data.frame(test2))
test3 <- mutate(test2,chunk.length=position-lag(position))
head(data.frame(test3))
test3$position
lag(test2$position)
head(data.frame(genome.chunks))
test <- mutate(genome.chunks,chunk.length=position-lag(position))
test
head(data.frame(test))
test <- mutate(genome.chunks,chunk.length=lead(position)-position)
head(data.frame(test))
test <- mutate(genome.chunks,chunk.length=as.numeric(position)-lag(as.numeric(position)))
head(data.frame(test))
type(test$position)
typeof(test$position)
t1 = test$position
t2 = lag(test$position)
t1
t2
t1-t2
genome.chunks
head(data.frame(genome.chunks))
test = head(data.frame(genome.chunks))
test
test %>% mutate(chunk.length=position-lag(position))
test2 <- genome.chunks %>% mutate(chunk.length=position-lag(position))
head(data.frame(test2))
typeof(genome.chunks)
typeof(odd.genomes)
typeof(labeled.mutations)
typeof(labeled.mutations)
labeled.mutations
typeof(labeled.mutations)
typeof(data.frame(labeled.mutations))
odd.genomes
genome.chunks <- group_by(odd.genomes,lineages)
genome.chunks <- group_by(odd.genomes,lineage)
grouped.genomes.df <- genome.chunks
del.sizes
df
head(data.frame(odd.genome.chunks))
head(data.frame(genome.chunks))
test <- genome.chunks
genome.chunks <- test %>% filter(chunk.transitions!='0')
head(data.frame(genome.chunks))
test <- genome.chunks %>%
mutate(chunk.length=position-lag(position))
head(data.frame(test))
class(genome.chunks)
typeof(genome.chunks)
test <- data.frame(genome.chunks) %>% mutate(chunk.length=position-lag(position))
head(test)
class(test)
genome.chunks <- group_by(odd.genomes,lineage) %>%
        calc.indel.change() %>%
        filter(chunk.transitions != '0') %>%
        ## position - lag(position) gives the distance between the previous transition
        ## marker. So, there are N-1 chunk lengths for N markers (first entry is NA).

        data.frame() %>% ## for some reason have to do type coercion to get the lag(position) working.
        mutate(chunk.length=position-lag(position))
genome.chunks
genome.chunks
quote(lineage)
'lineage'
quote(lineage)
head(data.frame(odd.genome.chunks))
head(all.odd.chunks)
all.odd.chunks
levels(all.odd.chunks$lineage)
head(labeled.mutations)
unique(labeled.mutations$genome)
rm(Fig1.factory)
scored.odd.genomes
scored.odd.genomes
gene.test
head(odd.genomes)
odd.introgression.scores
odd.introgression.scores <- score.introgression(odd.genomes)
odd.genomes
odd.introgression.scores
head(data.frame(odd.introgression.scores))
odd.introgression.scores
odd.introgression.scores
independent.genomes <- odd.genomes
label.levels
labels.to.int
labels.to.int
test <- score.introgression(odd.genomes)
test
introgression.scores
odd.introgression.scores
)
get.introgressed.genes(odd.introgression.scores)
test <- get.introgressed.genes(odd.introgression.scores)
data.frame(odd.introgressed.genes)
odd.introgression.scores
odd.K12.clone.data
K12.mixed.pop.data
}
odd.K12.clone.data
G.score.data
unique(K12.clone.data$genome)
unique(odd.K12.clone.data$genome)
mut.df <- odd.K12.clone.data
lvector <- c("Ara+1","Ara+2", "Ara+3")
no.B.genomes$lineage
no.B.genomes$lineage
rev(unique(no.B.genomes$lineage))
rev(unique(no.B.genomes$genome))
rev(unique(no.B.genomes$genome))
mut.df <- K12.clone.data
mut.df
annotated.clone.K12.segments
head(annotated.fixed.K12.segments)
fixed.K12.seg.parallelism
data.frame(fixed.K12.seg.parallelism)
data.frame(clone.K12.seg.paralleism)
data.frame(clone.K12.seg.parallelism)
annotated.clone.K12.segments
head(annotated.clone.K12.segments)
head(test.clone.segs)
head(test.clone.segs)
head(annotated.fixed.K12.segments)
head(annotated.fixed.K12.segments)
head(annotated.clone.K12.segments)
fixed.K12.segment.plot
annotated.fixed.K12.segments
head(labeled.mutations)
test <- filter(labeled.mutations,lineage=='Ara+1',gene.annotation=='malT')
test
data.frame(test)
levels(test$mut.annotation)
levels(labeled.mutations$mut.annotation)
test2 <- filter(labeled.mutations,mut.annotation=='')
test2
data.frame(test2)
unique(test4$gene.annotation)
unique(test2$gene.annotation)
levels(test$mut.annotation)
levels(labeled.mutations$mut.annotation)
no.B.genomes <- filter(labeled.mutations,lbl!='0')
LTEE.top.hits
data.frame(LTEE.top.hits)
no.B.genomes <- labeled.mutations %>% filter(lbl!=0)
data.frame(LTEE.top.hits)
}
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
makeFig1panel <- Fig1.factory(labeled.mutations, G.score.data, analysis.type='Fig1')
panel1 <- makeFig1panel(c("Ara+1","Ara+2","Ara+3"))
ggsave("/Users/Rohandinho/Desktop/Fig1A.pdf", panel1,width=9.5,height=8)
add.odd.chunks
all.odd.chunks
genomes.df <- odd.genomes
test <- calc.indel.change(odd.genomes)
test
test <- filter(test,genome=='REL11735')
test
sum(test$deleted)
sum(test$inserted)
sum(test$inserted-test$deleted)
sum(test$inserted+test$deleted)
test
head(data.frame(test))
hand.annotation
clone.K12.seg.parallelism
data.frame(clone.K12.seg.parallelism)
odd.introgression.scores
odd.introgressed.genes
scored.odd.genomes
data.frame(head(scored.odd.genomes))
introgression.score
odd.introgression.scores
tail(odd.introgression.scores)
head(K12.diff.data)
K12.diff.data
odd.introgression.scores
data.frame(head(K12.diff.data))
K12.diff.data
odd.introgression.scores
odd.genomes
introgression.vs.divergence.data$introgression.score
filter(introgression.vs.divergence.data,is.na(introgression.score))
odd.genomes %>% filter(gene.annotation=='yegZ')
odd.genomes %>% filter(position==2100919)
odd.genomes %>% filter(position==2100919) %>% data.frame()
K12.diff.data
introgression.vs.divergence.data
filter(introgression.vs.divergence.data,is.na(introgression.score))
two.classed.introgression.data
median.introgression.data
erased.evoexp.mutations
test <- erased.evoexp.mutations %>% filter(lineage=='Ara-3')
test
data.frame(test)
evoexp.erased.mutations
data.frame(evoexp.erased.mutations)
evoexp.erased.mutations
makeLCA_Fig1panel <- Fig1.factory(LCA.evoexp.data,G.score.data,analysis.type='evoexpLCA')
LCApanel1 <- makeLCA_Fig1panel(c("Ara+1","Ara+2","Ara+3", "Ara+4", "Ara+5", "Ara+6"))
LCApanel2 <- makeLCA_Fig1panel(c("Ara-1","Ara-2","Ara-3", "Ara-4", "Ara-5", "Ara-6"))
ggsave("/Users/Rohandinho/Desktop/LCA_Fig1A.pdf", LCApanel1,width=9.5,height=8)
ggsave("/Users/Rohandinho/Desktop/LCA_Fig1B.pdf", LCApanel2,width=9.5,height=8)
obs.evoexp.dS
obs.evoexp.dN
non.fixed.evoexp.dS
non.fixed.evoexp.dN
test <- evoexp.labeled.mutations %>% filter(lbl==0)
test
data.frame(head(test))
test <- evoexp.labeled.mutations %>% filter(lbl==4)
data.frame(head(test))
head(evoexp.labeled.mutations)
data.frame(head(evoexp.labeled.mutations))
evoexp.labeled.mutations$frequency
test <- evoexp.labeled.mutations %>% filter(is.na(frequency))
unique(test$lbl)
erased.evoexp.mutations
initial.erasures
fixed.erasures
final.erasures
non.fixed.erasures
data.frame(non.fixed.erasures)
mut.df <- labeled.mutations
lvector <- c("Ara+1","Ara+2","Ara+3")
top.hits
unique(top.hits$gene.annotation)
LTEE.top.hits
unique(LTEE.top.hits$gene.annotation)
unique(LTEE.top.hits$gene.annotation)
 head(no.B.genomes)
analysis.type= 'Fig1'
quartz()
panel
levels(no.B.genomes$lbl)
unique(no.B.genomes$lbl)
test <- viridis(9)
test
palette(test)
levels(no.B.genomes$lbl)
levels(no.B.genomes$lbl)
test <- no.B.genomes %>% filter(lbl %in% c('6','7','8','9'))
test
levels(no.B.genomes$lbl)
head(LTEE.top.hits)
LTEE.top.hits
