l3 <- "Ara+3"
l1 = "Ara+4"
l2 = "Ara+5"
l3 = "Ara+6"
muttiple.muts
multiple.muts
new.odd.mutations
multiple.muts$gene.annotation
single.muts$gene.annotation
quartz()
Fig2C
mult.mut
mult.mut2
as.data.frame(mult.mut)
test
test
test
test
new.odd.mutation.summary
new.odd.mutation.summmary <- group_by(new.odd.mutations,genome) %>% group_by(gene.annotation) %>% summarize(muts=n())
new.odd.mutation.summary
new.odd.mutation.summary <- group_by(new.odd.mutations,genome) %>% group_by(gene.annotation) %>% summarize(muts=n())
new.odd.mutation.summary
new.odd.mutation.summary
test3
top.new.odd.mutations
positive.G.score.new.odd.mutations
data.frame(positive.G.score.new.odd.mutations)
test
test
data.frame(LTEE.top.hits)
unique(LTEE.top.hits$gene.annotation)
LTEE.top.hits
unique(LTEE.top.hits$gene.annotation)
unique(LTEE.top.hits$position)
tail(data.frame(LTEE.top.hits))
test <- filter(LTEE.top.hits,gene.annotation=='arcA')
test
data.frame(test)
test2 <- filter(LTEE.top.hits,gene.annotation=='nadR')
data.frame(test2)
)
genes.to.label
gene.conv
gene.convs
new.odd.mutations
 rest.new.odd.mutations
gene.convs
Fig2C
test1
test2
test2
test2
rest.new.odd.mutations$gene.annotation
gene.convs$gene.annotation
unique(gene.convs$gene.annotation)
gene.convs.mutcount
)
gene.convs.summary
rest.new.odd.G.score
gene.convs.G.score
gene.convs
rest.new.muts.summary
data.frame(rest.new.muts.summary)
gene.convs.summary
rest.new.muts.summary
data.frame(filter(gene.convs,gene.annotation=="[ECB_03438]"))
gene.convs.summary
top.new.odd.mutations
data.frame(top.new.odd.mutations)
positive..G.score.new.odd.mutations
positive.G.score.new.odd.mutations
G.score.data
rest.new.odd.G.score
G.score.temp
G.score.rest.new.odd.mutations
G.score.rest.new.odd.mutations
data.frame(G.score.rest.new.odd.mutations)
G.score.data
G.score.rest.new.odd.mutations
G.score.rest.new.odd.mutations
data.frame(G.score.rest.new.odd.mutations)
G.score.rest.new.odd.mutations
G.score.rest.new.odd.mutations
G.score.rest.new.odd.mutations
data.frame(G.score.rest.new.odd.mutations)
data.frame(G.score.rest.new.odd.mutations)
G.score.rest.new.odd.mutations
data.frame(G.score.rest.new.odd.mutations)
rest.new.muts.summary
rest.new.muts.lineage.summary
deleted.muts.lineage.summary
gene.convs.summary
top.new.odd.mutations
G.score.rest.new.odd.mutations
G.score.rest.new.odd.mutations
G.score.rest.new.odd.mutations
deleted.odd.mutations
rest.new.muts.lineage.summary
rest.new.muts.lineage.summary
deleted.muts.lineage.summary
special.G.score
mean(special.G.score$mean.G.score)
data.frame(special.G.score)
l1="Ara+1"
l2="Ara+2"
l3="Ara+3"
top.hits
unique(top.hits$gene.annotation)
genes.to.label
genes.to.label
genes.to.label
genes.to.label
)
test
genes.to.label
genes.to.label$Gene.index
genes.to.label$label.name
)
genes.to.label$label.name
sQuote(ybaL, fabF, topA, pykF, mreC/B, malT, spoT, hslU, iclR, nadR, arcA)
test <- sQuote(ybaL, fabF, topA, pykF, mreC/B, malT, spoT, hslU, iclR, nadR, arcA)
test <- sQuote(c(ybaL, fabF, topA, pykF, mreC/B, malT, spoT, hslU, iclR, nadR, arcA))
test
genes.to.label
LTEE.top.hits
LTEE.top.hits$gene.annotation
head(as.data.frame(LTEE.top.hits))
panel.labels
panel.labels
even.K12.chunks
all.K12.chunks
as.data.frame(K12.chunk.summary)
unique(odd.K12.chunks$genome)
unique(odd.genomes$genome)
unique(odd.genome.chunks$genome)
all.chunk.summary
)
test
K.12.deleted.markers
K12.deleted.markers
donor.and.deleted.markers
as.data.frame(donor.and.deleted.markers)
LTEE.top.hits
l1 = "Ara+1"
l2="Ara+2"
l3="Ara+3"
panel.labels
as.data.frame(panel.labels)
rest.new.muts.summary
rest.new.muts.lineage.summary
rest.new.odd.mutations
as.data.frame(rest.new.odd.mutations)
rest.new.odd.G.score
top.new.odd.mutations
as.data.frame(top.new.odd.mutations)
test
head(as.data.frame(test))
quartz()
poly.plot
poly.plot
polys
polys
poly.plot
)
)
))
polys
poly.ploy
poly.plot
poly.plot
poly.plo
poly.plot
poly.plot
poly.ploy
poly.plot
poly.plot
poly.plot
special.gene.list
special.gene.list
special.gene.list
as.data.frame(special.gene.list)
'
\
)
)
genes.to.label
quartz()
)
FigS3
FigS4
}
l1 = 'Ara+1'
l2 = 'Ara+2'
l3 = 'Ara+3'
no.B.genomes
quartz()
panel
genes.to.label
genes.to.label
genes.to.label$Gene.index
genes.to.label
genes.to.label$Gene.index
genes.to.label$Gene.name
panel
quartz()
panel
{}
quartz()
panel1
panel1
l1 = 'Ara+1'
l2 = 'Ara+2'
l3 = 'Ara+3'
panel
panel
panel
panel
no.B.genomes
panel
panel
panel
panel
panel
ara.minus3.labeled.mutations
ara.minus3.labeled.mutations
levels(ara.minus3.labeled.mutations$lbl)
ara.minus3.figure
labeled.mutations <- ara.minus3.labeled.mutations
panel
no.B.genomes
no.B.genomes$lbl
panel
top.G.score.genes
top.hits
genes.to.label
panel.labels
panel
panel
panel
panel
panel
panel
ara.minus3.figure
ara.minus3.figure
ara.minus3.figure
quartz()
test
no.B.genomes
unique(no.B.genome$y.center)
unique(no.B.genomes$y.center)
test
test
test
test
no.B.genomes
unique(no.B.genomes$lbl)
test
test
test
quartz()
test
quartz()
FigS3
FigS3
FigS3
donor.labeled.mutations
donor.labeled.mutations
test
data.frame(test)
test
test2
data.frame(test2)
donor.odd.mutations
quartz()
FigS6
FigS6
FigS6
FigS6
FigS6
odd.genomes
donor.odd.mutations
donor.odd.mutations.summary
data.frame(donor.odd.mutations.summary)
FigS6
FigS6
FigS6
FigS6
FigS6
quartz()
FigS5.2
evoexp.labeled.mutations
evoexp.data
head(data.frame(evoexp.data))
test = evoexp.data$genome[1,1]
test = evoexp.data$genome[1]
test
test == 'RM3-149-1'
'149' %in% test
pmatch('149'test)
pmatch('149',test)
typeof(test)
'149' %in% as.str(test)
'149' %in% as.character(test)
as.character(test)
"149" %in% as.character(test)
grep("149",test)
grep("153",test)
grep("153",as.character(test))
grep1("153",as.character(test))
grepl("153",as.character(test))
grepl("149",as.character(test))
head(data.frame(evoexp.data))
tail(test.data)
quartz()
test.panel
test.panel
araplus1.pnael
araplus1.panel
levels(evoexp.data2$lineage)
for l in levels(evoexp.data2$lineage) {print(l)}
evoexp.data
l.data
l.data
test <- l.data %>% filter(lbl==0|lbl==2)
test
test$frequency
test <- l.data %>% filter(frequency>0)
test
l.data
l.data$frequency
l.data <- filter(evoexp.data2$lineage == 'Ara-6')
l
l.data <- filter(evoexp.data2$lineage == l)
l.data <- filter(evoexp.data2,lineage == l)
l.data
l.data$frequency
test <- l.data %>% filter(frequency>0)
test
test$lbl
l
test <- l.data %>% group_by(position,generation)
test
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) #%>%
test
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>%

        summarise(delta.freq=lead(frequency)-frequency))
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>%

        summarise(delta.freq=lead(frequency)-frequency)
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>%

test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>% summarise(delta.freq=lead(frequency)-frequency)
test
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>% summarise(delta.freq=frequency-lag(frequency))
test
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>% mutate(delta.freq=order_byfrequency-lag(frequency))
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) %>% mutate(delta.freq=frequency-lag(frequency))
test
test$delta.freq
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) 
test
test$frequency
test$frequency - lag(test$frequency)
frequency
test <- l.data %>% arrange(position,generation) %>% group_by(position,generation) 
lead(test$frequency) - test$frequency
test
head(data.frame(test))
test2 <- test[6,]
test2
test2 <- data.frame(test)[1:6,]
test2
mutate(test2,delta.freq=frequency-frequency)
t = mutate(test,delta.freq=frequency-lag(frequency))
t
data.frame(t)
t
mutate(test2,delta.freq=frequency-lag(frequency))
test2
summarise(test2,delta.freq=lead(frequency)-frequency)
group_by(test2,position,generation) %>% summarise(,delta.freq=lead(frequency)-frequency)
group_by(test2,position,generation) %>% summarise(delta.freq=lead(frequency)-frequency)
group_by(test2,position) %>% summarise(delta.freq=lead(frequency)-frequency)
test2
test2 %>% group_by(position) %>% summarise(d=lead(frequency)-frequency)
test2
test2 %>% summarise(d=lead(frequency)-frequency)
test3 <- test2 %>% group_by(position,generation)
test3
test3 <- test2 %>% group_by(position)
test3
test2
test3
test3 %>% summarise(d=lead(frequency)-frequency)
test3
test3 %>% mutate(d=lead(frequency)-frequency)
test4 <- test3 %>% mutate(d=lead(frequency)-frequency)
data.frame(test4)
test4 <- test3 %>% mutate(d=frequency-lag(frequency))
data.frame(test4)
test4 %>% select(!is.na(d))
test4 %>% select(not is.na(d))
test4 %>% select(is.na(d))
is.na(test4$d)
test4 %>% na.omit()
head(l2.data)
test <- data.frame(l2.data)
head(test)
test <- evoexp.data $%$ filter(lbl==4)
test <- evoexp.data %>% filter(lbl==4)
test
data.frame(test)
evpexp.data2$frequency
evoexp.data2$frequency
erased.muts$frequency
erased.muts <- filter(evoexp.data2,lbl==4)
erased.muts$frequency
erased.muts
d.recipient.muts
d.recipient.muts$lineage
d.recipient.muts
data.frame(d.recipient.muts)
erased.muts
clone.erased.muts
clone.erased.muts
pop.erased.muts
intersect(pop.erased.muts,clone.erased.muts)
pop.erased.muts
clone.erased.muts
write.csv(clone.erased.muts,file="/Desktop/clone_erased_muts.csv")
write.csv(clone.erased.muts,file="/Users/Rohandinho/Desktop/clone_erased_muts.csv")
write.csv(pop.erased.muts,file="/Users/Rohandinho/Desktop/pop_erased_muts.csv")
write.csv(clone.erased.muts,file="/Users/Rohandinho/Desktop/clone_erased_muts.csv")
> write.csv(pop.erased.muts,file="/Users/Rohandinho/Desktop/pop_erased_muts.csv")
> labeled.mutations
K12.clone.muts
K12.evoexp.fixations
K12.clone.muts
K12.evoexp.fixations
K12.evoexp.fixations
K12.clone.muts
test
test
data.frame(test)
test
pop.erased.muts
clone.erased.muts
problems.erased
pop.problem.erased.muts
data.frame(pop.problem.erased.muts)
test
head(data.frame(test))
l
l.delta.data
test
test
test$generation
filter(test,generation==1200)
parallel.delta.freq2 <- evoexp.data %>% filter(lineage !='Ara+1') %>% lineage(!='Ara-3')
evoexp.data
interesting.delta.pos
interesting.delta.muts
interesting.delta.muts$gene.annotation
interesting.delta.muts
interesting.delta.muts$gene.annotation
unique(interesting.delta.muts$gene.annotation)
evoexp.data
g <- levels(labeled.mutations$genome)[1]
g
clone.lineage
clone.lineage
clone.delta.freq
)
g.data
clone.lineage
labeled.mutations
labeled.mutations$lbl
l1 = "Ara+1"
l2 = "Ara+2"
l3 = "Ara+3"
levels(no.B.genomes$lbl)
only.donor.mutations$lbl
only.donor.mutations$lbl
unique(only.donor.mutations$lbl)
sort(unique(only.donor.mutations$lbl))
donor.mutations
donor.mutations
data.frame(donor.mutations)
data.frame(donor.mutations)
donor.mutations
REL606.LENGTH/2
labeled.mutations
origin
G.score.data
scored.odd.genomes
origin$position
Fig2.xlab
)
